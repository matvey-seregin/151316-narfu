
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторПользователяИБ) Тогда
		Возврат;
	КонецЕсли;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
		ТекущийОбъект.ИдентификаторПользователяИБ);
		
	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Логин = ПользовательИБ.Имя;
	ВходРазрешен = ПользовательИБ.АутентификацияСтандартная;
	
	ПарольИзменен = Ложь;
	Если ПользовательИБ.ПарольУстановлен Тогда
		Пароль = Новый УникальныйИдентификатор;
	Иначе
		Пароль = "";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторПользователяИБ) Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
			ТекущийОбъект.ИдентификаторПользователяИБ);
		Если ПользовательИБ = Неопределено Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		КонецЕсли;
	Иначе
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПользовательИБ.УникальныйИдентификатор) И Не ВходРазрешен Тогда
		Возврат;
	КонецЕсли;
	
	ПользовательИБ.ПолноеИмя = Объект.Наименование;
	ПользовательИБ.Имя = Логин;
	ПользовательИБ.АутентификацияСтандартная = ВходРазрешен;
	
	Если ПарольИзменен Тогда
		ПользовательИБ.Пароль = Пароль;
	КонецЕсли;
	
	ПользовательИБ.Роли.Очистить();
	
	Если ТекущийОбъект.Должность = Перечисления.Должности.Администратор Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	КонецЕсли;
	
	Если ТекущийОбъект.Должность = Перечисления.Должности.Директор Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускТонкогоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускВебКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускМобильногоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.СохранениеДанныхВывод);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениНСИ);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеКонтрагентов);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеДокументовПродажи);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеДокументовПокупки);
	КонецЕсли;
	
	Если ТекущийОбъект.Должность = Перечисления.Должности.МенеджерПоЗакупкам Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускТонкогоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускВебКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускМобильногоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.СохранениеДанныхВывод);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЧтениеНСИ);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеКонтрагентов);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеДокументовПокупки);
	КонецЕсли;
	
	Если ТекущийОбъект.Должность = Перечисления.Должности.МенеджерПоПродажам Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускТонкогоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускВебКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускМобильногоКлиента);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.СохранениеДанныхВывод);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЧтениеНСИ);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеКонтрагентов);
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ДобавлениеИзменениеДокументовПродажи);
	КонецЕсли;
	
	ПользовательИБ.Записать();
	
	ТекущийОбъект.ИдентификаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПарольИзменен = Истина;
КонецПроцедуры

#КонецОбласти




